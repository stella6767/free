@file:Suppress("ktlint")
package gg.jte.generated.ondemand.layout
import freeapp.life.stella.api.util.isLoggedIn
import org.springframework.security.core.Authentication
import org.springframework.security.authentication.AnonymousAuthenticationToken
@Suppress("UNCHECKED_CAST", "UNUSED_PARAMETER")
class JtemainGenerated {
companion object {
	@JvmField val JTE_NAME = "layout/main.kte"
	@JvmField val JTE_LINE_INFO = intArrayOf(0,0,0,1,2,5,5,5,5,5,37,37,80,80,82,82,87,87,97,97,101,101,101,103,103,119,119,119,5,6,6,6,6,6)
	@JvmStatic fun render(jteOutput:gg.jte.html.HtmlTemplateOutput, jteHtmlInterceptor:gg.jte.html.HtmlInterceptor?, isUserLoggedIn:Boolean = freeapp.life.stella.api.util.isLoggedIn (), bodyContent:gg.jte.Content) {
		jteOutput.writeContent("\n<!DOCTYPE html>\n<html lang=\"ko\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n    <meta charset=\"UTF-8\" />\n    <meta name=\"author\" content=\"stella6767\" />\n    <meta name=\"keywords\" content=\"Kotlin,htmx\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Whatever</title>\n\n    <script defer src=\"/js/htmx.min.js\"></script>\n    <script src=\"https://unpkg.com/htmx.org@1.9.12/dist/ext/multi-swap.js\" defer></script>\n    <script src=\"https://unpkg.com/htmx.org/dist/ext/loading-states.js\" defer></script>\n    <script type=\"module\" src=\"https://md-block.verou.me/md-block.js\"></script>\n    <script src=\"/js/client.js\" defer></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/sockjs-client/1.4.0/sockjs.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/stomp.js/2.3.3/stomp.min.js\"></script>\n\n\n    <link href=\"/css/main.css\" rel=\"stylesheet\">\n    <link href=\"/css/loading.css\" rel=\"stylesheet\" type=\"text/css\" />\n\n</head>\n<body xmlns:hx-on=\"http://www.w3.org/1999/xhtml\" class=\"flex flex-col min-h-screen\">\n\n<div class=\"navbar bg-base-100 sticky top-0 z-30\">\n    <div class=\"drawer navbar-start\">\n        <input id=\"my-drawer\" type=\"checkbox\" class=\"drawer-toggle\" />\n        <div class=\"drawer-content\">\n            ")
		jteOutput.writeContent("\n            <label for=\"my-drawer\" class=\"btn btn-primary drawer-button \">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"inline-block w-5 h-5 stroke-current\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\n                </svg>\n            </label>\n        </div>\n        <div class=\"drawer-side \">\n            <label for=\"my-drawer\" class=\"drawer-overlay\"></label>\n            <ul class=\"menu p-4 w-80 h-full bg-base-200 text-base-content\">\n                <li><a href=\"/about/me\">about me</a></li>\n                <li><a href=\"/page/todos\">todos</a></li>\n                <li><a href=\"/blog\">blog</a></li>\n                <li><a href=\"/publicApis\">public api list</a></li>\n                <li><a href=\"/chat\">Chat Lab</a></li>\n                <li><a href=\"/velog/crawler\">velog crawler</a></li>\n                <li><a href=\"/converter\">html to kotlin</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <div class=\"navbar-center\">\n        <a class=\"btn btn-ghost normal-case text-xl mt-3\" href=\"/\">Whatever</a>\n    </div>\n\n    <div class=\"navbar-end\">\n        <div class=\"max-w-md\">\n            <form method=\"get\" action=\"/blog\" class=\"relative mx-auto w-max\">\n                <input type=\"search\" name=\"keyword\" class=\"peer cursor-pointer relative z-10 h-12 w-12 rounded-full border bg-transparent pl-12 outline-none focus:w-full focus:cursor-text focus:border-lime-300 focus:pl-16 focus:pr-4\" />\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"absolute inset-y-0 my-auto h-8 w-12 border-r border-transparent stroke-gray-500 px-3.5 peer-focus:border-lime-300 peer-focus:stroke-lime-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                </svg>\n            </form>\n        </div>\n        <ul class=\"menu menu-horizontal px-1 mr-5\">\n            <li>\n                <details>\n                    <summary>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" class=\"inline-block w-5 h-5 stroke-current\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" />\n                        </svg>\n                    </summary>\n                    <ul class=\"p-2 bg-base-100\">\n                        ")
		if (!isUserLoggedIn) {
			jteOutput.writeContent("\n                            <li><a onclick=\"login_modal.showModal()\">Login</a></li>\n                        ")
		} else {
			jteOutput.writeContent("\n                            <li><a href=\"/logout\">LogOut</a></li>\n                            <li>\n                                <a hx-trigger=\"click\" hx-get=\"/post/editor\" hx-target=\"#content-body\" href=\"/post/editor\">ìƒˆê¸€ì“°ê¸°</a>\n                            </li>\n                        ")
		}
		jteOutput.writeContent("\n                        <li><a href=\"/readme\">ë¹Œë“œ ì„¤ëª…</a></li>\n                    </ul>\n                </details>\n            </li>\n        </ul>\n    </div>\n</div>\n\n<div id=\"content-body\" class=\"py-3 flex-grow\">\n    ")
		gg.jte.generated.ondemand.component.util.JteprogressViewGenerated.render(jteOutput, jteHtmlInterceptor);
		jteOutput.writeContent("\n    <div id=\"toast\">\n    </div>\n\n    ")
		jteOutput.setContext("div", null)
		jteOutput.writeUserContent(bodyContent)
		jteOutput.writeContent("\n\n    ")
		gg.jte.generated.ondemand.component.util.JteloginModalViewGenerated.render(jteOutput, jteHtmlInterceptor);
		jteOutput.writeContent("\n</div>\n\n\n\n<footer class=\"footer sm:footer-horizontal footer-center bg-base-300 text-base-content p-4\">\n    <div>\n        <p>Created by Stella6767</p>\n        <p>ðŸ“ž alsrb9434@gmail.com</p>\n        <a href=\"https://github.com/stella6767\" target=\"_blank\" style=\"text-decoration: none;\">GitHub</a>\n    </div>\n</footer>\n\n\n</body>\n</html>\n")
	}
	@JvmStatic fun renderMap(jteOutput:gg.jte.html.HtmlTemplateOutput, jteHtmlInterceptor:gg.jte.html.HtmlInterceptor?, params:Map<String, Any?>) {
		val isUserLoggedIn = params["isUserLoggedIn"] as Boolean? ?: freeapp.life.stella.api.util.isLoggedIn ()
		val bodyContent = params["bodyContent"] as gg.jte.Content
		render(jteOutput, jteHtmlInterceptor, isUserLoggedIn, bodyContent);
	}
}
}
